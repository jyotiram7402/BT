// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract StudentRegistry {
    struct Student {
        uint256 studentId;
        string name;
        uint256 age;
    }

    Student[] public students;

    // Fallback function
    fallback() external {
        revert("Fallback function: This contract does not accept Ether.");
    }

    function addStudent(uint256 studentId, string memory name, uint256 age) public {
        students.push(Student(studentId, name, age));
    }

    function getStudentCount() public view returns (uint256) {
        return students.length;
    }

    function getStudent(uint256 index) public view returns (uint256, string memory, uint256) {
        require(index < students.length, "Invalid index");
        Student memory student = students[index];
        return (student.studentId, student.name, student.age);
    }
}
